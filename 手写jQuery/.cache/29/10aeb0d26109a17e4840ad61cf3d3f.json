{"id":"main.js","dependencies":[],"generated":{"js":"// jQuery()\n// jQuery('.test')\n// const api = jQuery('.test') //不返回元素 返回api对象\n// api.addClass('red') // 遍历所有刚才获取的元素 添加.red\n// const api = jQuery('.test')\n// api.addClass('red') // this就是api\n//         .addClass('blue')\n//         .addClass('green') //链式操作\n// obj.fn(p1) // 函数里的this就是obj\n// obj.fn.call(obj,p1)\n// jQuery('.test')\n//     .addClass('red')\n//     .addClass('blue')\n//     .addClass('green')\n// console.log($('.test1').find('.child'))\n// $('.test1').find('.child').addClass('red') // red不会加到child上 会加到test1上\n//改elements之后\n// $('.test1').find('.child').addClass('red') // 有bug\n// // bug\n// const api1 = jQuery('.test1')\n// api1.addClass('blue')\n// const api2 = api1.find('.child').addClass('red')\n// api1.addClass('green') // 应该加到test1上 由于修改了elements结果加到了child上\n// 修改完之后\n// const api1 = jQuery('.test1')\n// api1.addClass('blue')\n// const api2 = api1.find('.child').addClass('red')\n// api1.addClass('green')\n// const api1 = $('.test1')\n// const api2 = api1.find('.child').addClass('red').addClass('blue').addClass('green')\n// const oldApi = api2.end().addClass('yellow')\n// $('.test1').find('.child').addClass('red').addClass('blue').addClass('green').end().addClass('yellow')"},"sourceMaps":{"js":{"mappings":[{"generated":{"line":1,"column":0},"source":"main.js","original":{"line":1,"column":0}},{"generated":{"line":2,"column":0},"source":"main.js","original":{"line":3,"column":0}},{"generated":{"line":3,"column":0},"source":"main.js","original":{"line":5,"column":0}},{"generated":{"line":4,"column":0},"source":"main.js","original":{"line":6,"column":0}},{"generated":{"line":5,"column":0},"source":"main.js","original":{"line":8,"column":0}},{"generated":{"line":6,"column":0},"source":"main.js","original":{"line":9,"column":0}},{"generated":{"line":7,"column":0},"source":"main.js","original":{"line":10,"column":0}},{"generated":{"line":8,"column":0},"source":"main.js","original":{"line":11,"column":0}},{"generated":{"line":9,"column":0},"source":"main.js","original":{"line":13,"column":0}},{"generated":{"line":10,"column":0},"source":"main.js","original":{"line":14,"column":0}},{"generated":{"line":11,"column":0},"source":"main.js","original":{"line":16,"column":0}},{"generated":{"line":12,"column":0},"source":"main.js","original":{"line":17,"column":0}},{"generated":{"line":13,"column":0},"source":"main.js","original":{"line":18,"column":0}},{"generated":{"line":14,"column":0},"source":"main.js","original":{"line":19,"column":0}},{"generated":{"line":15,"column":0},"source":"main.js","original":{"line":21,"column":0}},{"generated":{"line":16,"column":0},"source":"main.js","original":{"line":22,"column":0}},{"generated":{"line":17,"column":0},"source":"main.js","original":{"line":24,"column":0}},{"generated":{"line":18,"column":0},"source":"main.js","original":{"line":25,"column":0}},{"generated":{"line":19,"column":0},"source":"main.js","original":{"line":27,"column":0}},{"generated":{"line":20,"column":0},"source":"main.js","original":{"line":28,"column":0}},{"generated":{"line":21,"column":0},"source":"main.js","original":{"line":29,"column":0}},{"generated":{"line":22,"column":0},"source":"main.js","original":{"line":30,"column":0}},{"generated":{"line":23,"column":0},"source":"main.js","original":{"line":31,"column":0}},{"generated":{"line":24,"column":0},"source":"main.js","original":{"line":33,"column":0}},{"generated":{"line":25,"column":0},"source":"main.js","original":{"line":34,"column":0}},{"generated":{"line":26,"column":0},"source":"main.js","original":{"line":35,"column":0}},{"generated":{"line":27,"column":0},"source":"main.js","original":{"line":36,"column":0}},{"generated":{"line":28,"column":0},"source":"main.js","original":{"line":37,"column":0}},{"generated":{"line":29,"column":0},"source":"main.js","original":{"line":39,"column":0}},{"generated":{"line":30,"column":0},"source":"main.js","original":{"line":40,"column":0}},{"generated":{"line":31,"column":0},"source":"main.js","original":{"line":41,"column":0}},{"generated":{"line":32,"column":0},"source":"main.js","original":{"line":42,"column":0}}],"sources":{"main.js":"// jQuery()\r\n\r\n// jQuery('.test')\r\n\r\n// const api = jQuery('.test') //不返回元素 返回api对象\r\n// api.addClass('red') // 遍历所有刚才获取的元素 添加.red\r\n\r\n// const api = jQuery('.test')\r\n// api.addClass('red') // this就是api\r\n//         .addClass('blue')\r\n//         .addClass('green') //链式操作\r\n\r\n// obj.fn(p1) // 函数里的this就是obj\r\n// obj.fn.call(obj,p1)\r\n\r\n// jQuery('.test')\r\n//     .addClass('red')\r\n//     .addClass('blue')\r\n//     .addClass('green')\r\n\r\n// console.log($('.test1').find('.child'))\r\n// $('.test1').find('.child').addClass('red') // red不会加到child上 会加到test1上\r\n\r\n//改elements之后\r\n// $('.test1').find('.child').addClass('red') // 有bug\r\n\r\n// // bug\r\n// const api1 = jQuery('.test1')\r\n// api1.addClass('blue')\r\n// const api2 = api1.find('.child').addClass('red')\r\n// api1.addClass('green') // 应该加到test1上 由于修改了elements结果加到了child上\r\n\r\n// 修改完之后\r\n// const api1 = jQuery('.test1')\r\n// api1.addClass('blue')\r\n// const api2 = api1.find('.child').addClass('red')\r\n// api1.addClass('green')\r\n\r\n// const api1 = $('.test1')\r\n// const api2 = api1.find('.child').addClass('red').addClass('blue').addClass('green')\r\n// const oldApi = api2.end().addClass('yellow')\r\n// $('.test1').find('.child').addClass('red').addClass('blue').addClass('green').end().addClass('yellow')\r\n\r\n"},"lineCount":null}},"error":null,"hash":"71c1574c220f5d83d68d91cc229fc13c","cacheData":{"env":{}}}